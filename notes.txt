# Lab room 40ft by 19.2ft (400,192)ft/10
# Desk 58inches by 23inches (58, 23)inches
# 

# Matrix for unique id of object
# Matrix for if space is taken (0,1)
# Matrix for open space (without reserved space)
        
# Solution space will be a list of lists. First list iterated through by id, second list iterated by reference id. 
    # Reference id will be assigned based on distance from the bottom left corner of the room. Euclidean distance because of calculating distance between solutions.

# Conflict Types:
        # 1. Static object hit. Dynamic object will move as much as it can.
        # 2. Dynamic object hit. Dynamic objects will have uniform distribution of who gets the space.

# How to find conflicts:
        # 1. Use prime number unique ids, open space will have 1s, movement will multiply new space and divide previous space.
            # Just need to check if prime number in each new position.
        # 2. Use a list of conflict objects. Each object consists of location (x,y) and list of uid with conflicts. If single
            # object is in list, no conflicts.
        
# Value of open space without exhaustive search
    # Grouping distances from objects and walls.


To do:
    * Finish set_X function 
        * Need to resolve conflicts
        * Need to check if white space is contiguous
            * If not contiguous, create noise near disconnections
    * Check if evaluate is good. Replace if not